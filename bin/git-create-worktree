#!/usr/bin/env bash

# Creates a git worktree (https://git-scm.com/docs/git-worktree) from a branch
# and puts in "../<repo-name>-WT/<branch>/"
#
# Worktrees are useful when want to change into a new branch as it is less
# expensive than git checkout requiring the current index to be clean. Use
# cases: PR reviews, long standing branches etc.
#
# Worktree commands:
# - git worktree list
# - git worktree prune
#
# Usage: git-create-worktree <path>

set -e

source "$WORKBENCH_PATH/bin/_utils/utils.sh"

BRANCH_NAME=$1

get_repo_name() {
  basename -s .git "$(git remote get-url origin)"
}

REPO_NAME="$(get_repo_name)"
WT_DIR_NAME="${REPO_NAME}__${BRANCH_NAME}__WT"
WT_PAT="../$WT_DIR_NAME"

make_wt_dir_if_not_exists() {
  if [ ! -d "$WT_PAT" ]; then
    mkdir -p "$WT_PAT"
    echo "The dir to keep worktrees does not exist. Created at: \"$WT_PAT\""
    echo
  fi
}

create_worktree() {
  "$(command -v git)" worktree add "$WT_PAT" "$BRANCH_NAME"
  echo "worktree created!"
  echo
  echo "Go to: "
  utils__message__color_message "yellow" "$WT_PAT"
}

main() {
  make_wt_dir_if_not_exists
  create_worktree
}

main
