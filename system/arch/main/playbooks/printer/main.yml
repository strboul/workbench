---
# Brother printer setup
#
# Test it with:
#   echo 'IPP everywhere' | lp
#
# A reboot may be needed in the end.
#
- name: Printer
  tags: printer
  hosts: all
  vars:
    printer:
      name: "brother-dcp-l2530dw"
      model: "DCP-L2530DW"
      ipv4_address: 192.168.50.10
  tasks:
    - name: Setup printer
      block:
        - name: Install CUPS
          community.general.pacman: name="{{ config.packages.pacman.cups }}" state=present
          become: true
          notify: cups.socket running

        - name: Install ghostscript  # brother printer requires it.
          community.general.pacman: name="{{ config.packages.pacman.ghostscript }}" state=present
          become: true

        - name: Run notified handlers
          ansible.builtin.meta: flush_handlers

        # lpadmin
        # -p destination  Specify/add the named destination. This can be arbitrary e.g. foobar.
        # -E              Enable and accept jobs on the printer (after -p)
        # -v device-uri   Specify the device URI for the printer.
        # -m model        Specify a standard model/PPD file for the printer. Must be 'everywhere'.
        # See: https://wiki.gentoo.org/wiki/Driverless_printing
        - name: Add printer
          ansible.builtin.shell: |
            lpadmin -p "{{ printer.name }}" -E -v "ipp://{{ printer.ipv4_address }}/ipp" -m everywhere
          register: printer_lpadmin
          changed_when: printer_lpadmin.rc != 0
          become: true

        - name: Enable the printer
          ansible.builtin.shell: |
            cupsenable "{{ printer.name }}"
          register: printer_cupsenable
          changed_when: printer_cupsenable.rc != 0
          become: true

    # https://wiki.archlinux.org/title/SANE
    - name: Setup scanner
      block:
        - name: Install SANE (Scanner Access Now Easy)
          community.general.pacman: name="{{ config.packages.pacman.sane }}" state=present
          become: true

        - name: Install brscan
          kewlfft.aur.aur:
            use: yay
            name:
              - "{{ config.packages.aur.brscan4 }}"
              - "{{ config.packages.aur.brscan_skey }}"
            state: present

        - name: Add scanner
          ansible.builtin.shell: |
            brsaneconfig4 -a name="{{ printer.name }}" model="{{ printer.model }}" ip="{{ printer.ipv4_address }}"
          register: printer_sane_config
          changed_when: printer_sane_config.rc != 0
          become: true
          notify: restart sane

        # Check if scanner recognized:
        #   scanimage -L
        #
        # Scan a page:
        #   scanimage --progress --format=pdf --output-file ~/Downloads/test.pdf

  handlers:
    # > cups provides a cups.socket unit. If cups.socket is enabled (and
    # > cups.service is disabled), systemd will not start CUPS immediately; it
    # > will just listen to the appropriate sockets. Then, whenever a program
    # > attempts to connect to one of these CUPS sockets, systemd will start
    # > cups.service and transparently hand over control of these ports to the
    # > CUPS process.
    # https://wiki.archlinux.org/title/CUPS#Socket_activation
    - name: cups.socket running
      ansible.builtin.systemd:
        name: cups.socket
        state: started
        enabled: true
      become: true

    - name: restart sane
      ansible.builtin.systemd:
        name: saned.socket
        state: restarted
        enabled: true
      become: true
