---
- name: Set variables
  ansible.builtin.set_fact:
    vars_ssh:
      client_path: "{{ ansible_env.HOME }}/.ssh"
      client_keys_path: "{{ ansible_env.HOME }}/.ssh/keys"

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    mode: "0700"
    state: directory
  loop:
    - "{{ vars_ssh.client_path }}"
    - "{{ vars_ssh.client_keys_path }}"

- name: Get keys
  ansible.builtin.include_vars:
    file: "{{ ansible_env.HOME }}/.ssh/keys.yml"
    name: ssh_keys

- name: Generate and manage keypairs ed25519
  ansible.builtin.include_tasks: keypairs_ed25519.yml
  loop: "{{ ssh_keys.ed25519 }}"

# Because of the potential for abuse, the config file must have
# strict permissions. Read/write for the user, and not accessible by
# others. It may be group-writable, provided that the group in question
# contains only the user.
- name: Check user config file permissions
  ansible.builtin.file:
    path: "{{ vars_ssh.client_path }}/config"
    mode: "0600"
  notify: sshd restart

# Account Manipulation: SSH Authorized Keys
# <https://attack.mitre.org/techniques/T1098/004/>
# Change the file owner to root and make it owner writable, but group readable.
#
- name: Restrict authorized_keys permissions
  ansible.builtin.file:
    path: "{{ vars_ssh.client_path }}/authorized_keys"
    owner: root
    group: root
    mode: "0644"
    state: touch
  become: true
